name: Run tests

on:
  workflow_dispatch:
    inputs:
      ml_ref:
         description: 'luxonis-ml version (branch/tag/SHA)'
         required: true
         default: main
      train_ref:
         description: 'luxonis-train version (branch/tag/SHA)'
         required: true
         default: main

  workflow_call:
    inputs:
      ml_ref:
        description: 'luxonis-ml version (branch/tag/SHA)'
        required: true
        type: string
      train_ref:
        description: 'luxonis-train version (branch/tag/SHA)'
        required: true
        type: string
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS:
        description: 'GCP service-account JSON'
        required: true
      CODECOV_TOKEN:
        description: 'Codecov upload token'
        required: true

permissions:
  pull-requests: write
  contents: write
  checks: write

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: Luxonis/luxonis-train
        ref:        ${{ inputs.train_ref }}
        path:       luxonis-train

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: pip

    - name: Install dependencies
      working-directory: luxonis-train
      run: pip install -e .[dev]

    - name: Install specified luxonis-ml
      shell: bash
      run: |
        pip uninstall luxonis-ml -y || true
        pip install "luxonis-ml[all] @ git+https://github.com/luxonis/luxonis-ml.git@${{ inputs.ml_ref }}" \
          --upgrade --force-reinstall

    - name: Authenticate to Google Cloud
      working-directory: luxonis-train
      id: google-auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        create_credentials_file: true
        export_environment_variables: true
        token_format: access_token

    - name: Run pytest
      working-directory: luxonis-train
      env:
        LUXONISML_BUCKET: luxonis-test-bucket
      run: pytest --cov --junitxml=junit.xml -o junit_family=legacy

    - name: Upload test results to Codecov
      if: matrix.os == 'ubuntu-latest'
      working-directory: luxonis-train
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

    - name: Upload coverage results to Codecov
      if: matrix.os == 'ubuntu-latest'
      working-directory: luxonis-train
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
